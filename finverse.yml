swagger: "2.0"

info:
  version: 0.0.1
  title: Finverse Public
  description: Documentation of the early finverse services
  termsOfService: https://example.com
  contact:
    name: Maintainers
    email: info@finverse.com
  license:
    name: "unknown license"

host: api.sandbox.finverse.net
basePath: /
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  Oauth2:
    type: oauth2
    flow: application
    tokenUrl: "https://finverse-dev.us.auth0.com/oauth/token"
    scopes:
      test: Test
      account: Account
      balance: Balance
      transaction: Transaction
      credit: Credit
      investment: Investment
      institution: Institution
      link: Link

security:
  - Oauth2:
      - test

tags:
  - description: Operations does not required an access token
    name: public
  - description: Operations required a customer access token
    name: customer
  - description: Operations required a login identity access token
    name: login_identity
  - description: Operations required a link token
    name: link

paths:
  /auth/customer/token:
    post:
      description: generate an access_token
      operationId: generateCustomerAccessToken
      security: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: tokenRequest
          description: token request
          schema:
            $ref: "#/definitions/TokenRequest"
      responses:
        "200":
          description: ok
          schema:
            $ref: "#/definitions/TokenResponse"
        "400":
          description: Invalid Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - public

  /accounts/{accountId}:
    get:
      description: Get a specific account's information
      operationId: getAccount
      security:
        - Oauth2: [account]
      produces:
        - application/json
      responses:
        200:
          description: Successful
          schema:
            $ref: "#/definitions/GetAccountResponse"
        400:
          description: Invalid Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - in: path
          name: accountId
          description: The account id
          required: true
          type: string
      tags:
        - login_identity

  /accounts:
    get:
      description: Get a list of accounts for a login identity
      operationId: listAccounts
      security:
        - Oauth2: [account]
      produces:
        - application/json
      responses:
        200:
          description: Successful
          schema:
            $ref: "#/definitions/ListAccountsResponse"
        400:
          description: Invalid Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - login_identity

  /account_numbers/{accountId}:
    get:
      description: Get the account number for a specific account
      operationId: getAccountNumber
      security:
        - Oauth2: [account_number]
      produces:
        - application/json
      responses:
        200:
          description: Successful
          schema:
            $ref: "#/definitions/GetAccountNumberResponse"
        400:
          description: Invalid Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - in: path
          name: accountId
          description: The account id
          required: true
          type: string
      tags:
        - login_identity

  /balance_history/{accountId}:
    get:
      description: Get the balance history for a specific account
      operationId: getBalanceHistory
      security:
        - Oauth2: [balance_history]
      produces:
        - application/json
      responses:
        200:
          description: Successful
          schema:
            $ref: "#/definitions/GetBalanceHistoryResponse"
        400:
          description: Invalid Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - in: path
          name: accountId
          description: The account id
          required: true
          type: string
      tags:
        - login_identity

  /transactions/{accountId}:
    get:
      description: Get a list of transactions for a particular account. The transactions are returned in sorted order, with the most recent one appearing first.
      operationId: listTransactionsByAccountId
      security:
        - Oauth2: [transaction]
      produces:
        - application/json
      responses:
        200:
          description: Successful
          schema:
            $ref: "#/definitions/ListTransactionsResponse"
        400:
          description: Invalid Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - in: path
          name: accountId
          description: The account id (ULID, example - 01EP4A1MZDHKETZFRPF0K62S6S)
          required: true
          type: string
        - in: query
          name: offset
          description: default is 0
          required: false
          type: integer
          default: 0
          minimum: 0
        - in: query
          name: limit
          description: default is 500, max is 1000
          required: false
          type: integer
          default: 500
          minimum: 1
          maximum: 1000
      tags:
        - login_identity

  /transactions:
    get:
      description: Get a list of transactions for a login identity. The transactions are returned in sorted order, with the most recent one appearing first.
      operationId: listTransactionsByLoginIdentityId
      security:
        - Oauth2: [transaction]
      produces:
        - application/json
      responses:
        200:
          description: Successful
          schema:
            $ref: "#/definitions/ListTransactionsResponse"
        400:
          description: Invalid Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - in: query
          name: offset
          description: default is 0
          required: false
          type: integer
          default: 0
          minimum: 0
        - in: query
          name: limit
          description: default is 500, max is 1000
          required: false
          type: integer
          default: 500
          minimum: 1
          maximum: 1000
      tags:
        - login_identity

  /income:
    get:
      description: Get income figures for a login identity
      operationId: getIncomeEstimateByLoginIdentityId
      security:
        - Oauth2: [income:get]
      produces:
        - application/json
      responses:
        200:
          description: Successful
          schema:
            $ref: "#/definitions/IncomeResponse"
        400:
          description: Invalid Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - login_identity

  /institutions/{institutionId}:
    get:
      description: Get a specific institution by institutionId
      operationId: getInstitution
      security:
        - Oauth2: [institution]
      produces:
        - application/json
      responses:
        "200":
          description: Successful
          schema:
            $ref: "#/definitions/Institution"
        "400":
          description: Invalid Request
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - in: path
          name: institutionId
          description: The institution id
          required: true
          type: string
      tags:
        - customer

  /institutions:
    get:
      description: Get a list of institutions
      operationId: listInstitutions
      security:
        - Oauth2: [institution]
      produces:
        - application/json
      responses:
        "200":
          description: Successful
          schema:
            $ref: "#/definitions/ListInstitutionsResponse"
        "400":
          description: Invalid Request
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        # Probably we want to remove the filtering options since we do not want it
        - in: query
          name: country
          description: The country the institution belongs to
          required: false
          type: string
        - in: query
          name: countries
          description: The countries the institution belongs to
          required: false
          type: array
          items:
            type: string
        - in: query
          name: products_supported
          description: The products that this institution supports
          required: false
          type: string
        - in: query
          name: institution_type
          description: The type of institution
          required: false
          type: string
          enum: [BANK, WALLET]
      tags:
        - customer
        - link

  /identity:
    get:
      description: \[BETA] Get a list of identity data for a given login identity
      operationId: getIdentity
      security:
        - Oauth2: [identity]
      produces:
        - application/json
      responses:
        "200":
          description: Successful
          schema:
            $ref: "#/definitions/GetIdentityResponse"
        "400":
          description: Invalid Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - login_identity

  /link:
    post:
      description: Creates a new link
      operationId: createLink
      security:
        - Oauth2: [link]
      produces:
        - application/json
      responses:
        "200":
          description: Service Okay
          schema:
            $ref: "#/definitions/LinkResponse"
        "400":
          description: Invalid Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/BadRequestModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - in: body
          name: linkRequest
          description: Request body for starting a new Link
          required: true
          schema:
            $ref: "#/definitions/LinkRequest"
      tags:
        - link

  /link/token:
    post:
      description: generate a link token that can be used to create link
      operationId: generateLinkToken
      security:
        - Oauth2: [link:token]
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: linkTokenRequest
          description: token request
          required: true
          schema:
            $ref: "#/definitions/LinkTokenRequest"
      responses:
        "200":
          description: ok
          schema:
            $ref: "#/definitions/LinkTokenResponse"
        "400":
          description: Invalid Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - customer
        - login_identity

  /link/relink:
    post:
      description: Update an existing link
      operationId: relink
      security:
        - Oauth2: [loginIdentity:update]
      produces:
        - application/json
      responses:
        "200":
          description: Service Okay
          schema:
            $ref: "#/definitions/LinkResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/BadRequestModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - in: body
          name: relinkRequest
          description: Request body for updating Link
          required: true
          schema:
            $ref: "#/definitions/RelinkRequest"
      tags:
        - link

  /customer/customizations:
    get:
      description: Get the customization details
      operationId: getCustomization
      security:
        - Oauth2: [link] # The link token can get customization deets
      produces:
        - application/json
      responses:
        200:
          description: Customization information
          schema:
            $ref: "#/definitions/CustomizationDetails"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/BadRequestModel"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - link

  /auth/callback:
    get:
      description: Callback url to get the oauth authorization token
      operationId: authCallback
      security: []
      produces:
        - application/json
      responses:
        "200":
          description: Returns the redirect uri with either sucess or error
          schema:
            $ref: "#/definitions/RedirectUriResponse"
        "400":
          description: Invalid Request
          schema:
            $ref: "#/definitions/ErrorResponse"
        "422":
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - in: query
          name: state
          description: The state of the client when oauth was initialized
          required: true
          type: string
        - in: query
          name: code
          description: The authorization code generated by the Oauth provider
          type: string
        - in: query
          name: error
          description: error
          type: string
        - in: query
          name: error_description
          description: error description
          type: string
        - in: query
          name: error_details
          description: error details
          type: string
      tags:
        - public

  /auth/token:
    post:
      description: Exchange authorization code for token
      operationId: token
      security:
        - Oauth2: [loginIdentity:token]
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      responses:
        "200":
          description: Service Okay
          schema:
            $ref: "#/definitions/AccessTokenResponse"
        "400":
          description: Invalid Request
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/BadRequestModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - in: formData
          name: grant_type
          required: true
          type: string
          enum: ["authorization_code"]
        - in: formData
          name: code
          required: true
          type: string
        - in: formData
          name: client_id
          required: true
          type: string
        - in: formData
          name: redirect_uri
          required: true
          type: string
      tags:
        - link

  /auth/token/refresh:
    post:
      description: Refresh an access token
      operationId: refreshToken
      security:
        - Oauth2: [loginIdentity:token]
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: refreshRequest
          description: "The refresh token"
          schema:
            $ref: "#/definitions/RefreshRequest"
          required: true
      responses:
        200:
          description: New refresh, access token
          schema:
            $ref: "#/definitions/AccessTokenResponse"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/BadRequestModel"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/BadRequestModel"
      tags:
        - customer

  /login_identity/{loginIdentityId}:
    get:
      description: Get a specific loginIdentity
      operationId: getLoginIdentityById
      security:
        - Oauth2: [loginIdentity:get]
      produces:
        - application/json
      responses:
        "200":
          description: Successful
          schema:
            $ref: "#/definitions/GetLoginIdentityByIdResponse"
        "400":
          description: Invalid Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/BadRequestModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - in: path
          name: loginIdentityId
          description: The login identity id
          required: true
          type: string
      tags:
        - customer

  /login_identity/{loginIdentityId}/history:
    get:
      description: Get a history of events for a specific loginIdentity
      operationId: getLoginIdentityHistory
      security:
        - Oauth2: [loginIdentity:get]
      produces:
        - application/json
      responses:
        "200":
          description: Successful
          schema:
            $ref: "#/definitions/GetLoginIdentityHistoryResponse"
        "400":
          description: Invalid Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/BadRequestModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - in: path
          name: loginIdentityId
          description: The login identity id
          required: true
          type: string
      tags:
        - customer

  /login_identity:
    get:
      description: Get a specific loginIdentity
      operationId: getLoginIdentity
      security:
        - Oauth2: [loginIdentity:self]
      produces:
        - application/json
      responses:
        "200":
          description: Successful
          schema:
            $ref: "#/definitions/GetLoginIdentityByIdResponse"
        "400":
          description: Invalid Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/BadRequestModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - login_identity

    delete:
      description: Delete a specific loginIdentity
      operationId: deleteLoginIdentity
      security:
        - Oauth2: [loginIdentity:delete]
      produces:
        - application/json
      responses:
        "200":
          description: Successful
          schema:
            $ref: "#/definitions/DeleteLoginIdentityResponse"
        "400":
          description: Invalid Request
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - login_identity

  /login_identity/refresh:
    post:
      description: Create a refresh job for a login identity
      operationId: refreshLoginIdentity
      security:
        - Oauth2: [loginIdentity:update]
      produces:
        - application/json
      responses:
        200:
          description: Refresh queued
        400:
          description: Refresh error
          schema:
            $ref: "#/definitions/BadRequestModel"
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/BadRequestModel"
      tags:
        - login_identity

  /statements:
    get:
      description: Get list of available statements
      operationId: getStatements
      security:
        - Oauth2: [statement:read]
      produces:
        - application/json
      responses:
        200:
          description: Successful
          schema:
            $ref: "#/definitions/GetStatementsResponse"
        400:
          description: Invalid Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      tags:
        - login_identity

  /statements/{statementId}:
    get:
      description: Download statement
      operationId: getStatement
      security:
        - Oauth2: [statement:read]
      produces:
        - application/json
      responses:
        200:
          description: Successful
          schema:
            $ref: "#/definitions/GetStatementLinkResponse"
        "307":
          description: Redirect
        400:
          description: Invalid Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - in: path
          name: statementId
          description: The statement id
          required: true
          type: string
        - in: query
          name: redirect
          description: when true, response will be http redirect; otherwise it will be json response with the download link
          required: false
          type: boolean
          default: true
      tags:
        - login_identity

  /payments/instruction:
    post:
      description: Create a new payment instruction to be used when linking to perform new payment
      operationId: createPaymentInstruction
      security:
        - Oauth2: [payment:create]
      produces:
        - application/json
      responses:
        200:
          description: Successful
          schema:
            $ref: "#/definitions/CreatePaymentInstructionResponse"
        400:
          description: Invalid Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/BadRequestModel"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - in: body
          name: paymentInstruction
          description: Request body for starting a new Link
          required: true
          schema:
            $ref: "#/definitions/CustomerPaymentInstruction"
      tags:
        - customer

  /payments/instruction/{paymentInstructionId}:
    get:
      description: Get payment instructions by payment_instruction_id
      operationId: getPaymentInstruction
      security:
        - Oauth2: [payment:get]
      produces:
        - application/json
      responses:
        200:
          description: Successful
          schema:
            $ref: "#/definitions/GetPaymentInstructionsResponse"
        400:
          description: Invalid Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/BadRequestModel"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - in: path
          name: paymentInstructionId
          description: The id of a payment instruction
          required: true
          type: string
      tags:
        - customer

  /composite_statement:
    get:
      description: Download composite statement
      operationId: getCompositeStatement
      security:
        - Oauth2: [composite_statement]
      produces:
        - application/json
      responses:
        200:
          description: Successful
          schema:
            $ref: "#/definitions/CompositeStatementLink"
        "307":
          description: Redirect
        400:
          description: Invalid Request
          schema:
            $ref: "#/definitions/BadRequestModel"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      parameters:
        - in: query
          name: redirect
          description: when true, response will be http redirect; otherwise it will be json response with the download link
          required: false
          type: boolean
          default: true
      tags:
        - login_identity

definitions:
  ErrorResponse:
    type: object
    properties:
      err:
        type: string
      http_status_code:
        type: number
        format: int
      status_text:
        type: string
      app_code:
        type: number
        format: int64
      error_category:
        type: string
      error_text:
        type: string
      request_id:
        type: string

  Principal:
    type: object
    properties:
      subject:
        type: string
        example: could be clientId/customerAppId/loginIdentityId depends on the type of token, see also the explict claims for each of these ids
      token:
        type: string
        example: algorithm.claims.hmac
      client_id:
        type: string
        example: someClientId
      customer_app_id:
        type: string
        example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
      login_identity_id:
        type: string
        example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
      customization_id:
        type: string
        example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
      mandate_id:
        type: string
        example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
      expires_in:
        type: number
        example: 3600
      scopes:
        type: array
        items:
          type: string
        example: ["link", "transaction"]
      link_token_request:
        $ref: "#/definitions/LinkTokenRequest"

    required:
      - "customer_app_id"
      - "login_identity_id"
      - "client_id"
      - "subject"

  GetAccountResponse:
    properties:
      account:
        $ref: "#/definitions/Account"
      login_identity:
        $ref: "#/definitions/LoginIdentityShort"
      institution:
        $ref: "#/definitions/InstitutionShort"

  GetAccountNumberResponse:
    properties:
      account_number:
        $ref: "#/definitions/AccountNumber"
      account:
        $ref: "#/definitions/Account"
      login_identity:
        $ref: "#/definitions/LoginIdentityShort"
      institution:
        $ref: "#/definitions/InstitutionShort"
      payment_details:
        type: array
        items:
          $ref: "#/definitions/PaymentDetails"

  GetBalanceHistoryResponse:
    properties:
      account:
        $ref: "#/definitions/Account"
      login_identity:
        $ref: "#/definitions/LoginIdentityShort"
      institution:
        $ref: "#/definitions/InstitutionShort"
      balance_history:
        type: array
        items:
          $ref: "#/definitions/BalanceHistory"

  GetIdentityResponse:
    properties:
      identity:
        $ref: "#/definitions/Identity"
      login_identity:
        $ref: "#/definitions/LoginIdentityShort"
      institution:
        $ref: "#/definitions/InstitutionShort"

  Identity:
    properties:
      names:
        type: array
        items:
          $ref: "#/definitions/IdentityName"
      addresses:
        type: array
        items:
          $ref: "#/definitions/IdentityAddress"
      emails:
        type: array
        items:
          $ref: "#/definitions/IdentityEmail"
      phone_numbers:
        type: array
        items:
          $ref: "#/definitions/IdentityPhoneNumber"
      date_of_births:
        type: array
        items:
          $ref: "#/definitions/IdentityDateOfBirth"

  ListAccountsResponse:
    properties:
      accounts:
        type: array
        items:
          $ref: "#/definitions/Account"
      login_identity:
        $ref: "#/definitions/LoginIdentityShort"
      institution:
        $ref: "#/definitions/InstitutionShort"

  RefreshRequest:
    properties:
      refresh_token:
        type: string
    required:
      - "refresh_token"

  Account:
    properties:
      account_id:
        type: string
        example: "01ARZ3NDEKTSV4RRFFQ69G5FAV"
      group_id:
        type: string
        example: "03504faef9ad3ac048c6a43efa6db7ba1c5239a856536839d87ac949559e7ceb"
        description: The SHA3-256 hash of the account number, salted with the loginIdentityId
      account_holder_name:
        type: string
        example: John Doe
      account_name:
        type: string
        example: HKD Savings
      account_nickname:
        type: string
        example: Emergency Fund
      account_type:
        type: string
        example: SAVINGS
      account_sub_type:
        type: string
        example: TIME_DEPOSIT
      account_number_masked:
        type: string
        example: 123XXXXXX89
      country:
        type: string
        example: HKG
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      account_currency:
        type: string
        example: "HKD"
      balance:
        type: object
        $ref: "#/definitions/CurrencyAmount"
      statement_balance:
        type: object
        $ref: "#/definitions/CurrencyAmount"
      is_parent:
        type: boolean
        example: false
      is_closed:
        type: boolean
        example: false
      is_excluded:
        type: boolean
        example: false
    required:
      - is_parent
      - is_closed
      - is_excluded
      - account_id
      - account_name
      - group_id

  BalanceHistory:
    properties:
      date:
        type: string
        example: "2021-10-27"
        description: The date the balance was recorded
      amount:
        type: number
        example: 69.00
        description: The end of day balance for this account on this specific date
      currency:
        type: string
        example: "HKD"
        description: The currency the balance
    required:
      - date
      - amount
      - currency

  AccountNumber:
    properties:
      account_id:
        type: string
        example: "01ARZ3NDEKTSV4RRFFQ69G5FAV"
      number:
        type: string
        example: "1234567890123"
      raw:
        type: string
        example: "123-4567890-123"
    required:
      - account_id
      - raw

  CurrencyAmount:
    properties:
      currency:
        type: string
        example: "HKD"
      value:
        type: number
        example: 69.00
      raw:
        type: string
        example: "69.00"
    required:
      - value

  CustomizationDetails:
    properties:
      logo_id:
        type: string
        example: dev-secret-something/a_ulid_goes_here_probably
      display_name:
        type: string
        example: Generic Finance App Name

  Transaction:
    properties:
      transaction_id:
        type: string
        example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
      account_id:
        type: string
        example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
      transaction_state:
        type: string
        example: ACTIVE
      transaction_type:
        type: string
        example: OTHER
      category:
        type: string
        example: OTHER
      category_id:
        type: string
        example: OTHER
      merchant_name:
        type: string
        example: FUEL COFFEE
      description:
        type: string
        example: Latte
      location:
        type: string
        example: Pacific Place
      is_pending:
        type: boolean
        example: false
      status:
        type: string
        example: COMPLETED
      posted_date:
        type: string
        description: YYYY-MM-DD
        example: 2020-10-10
      transaction_date:
        type: string
        description: YYYY-MM-DD
        example: 2020-10-08
      amount:
        type: object
        $ref: "#/definitions/CurrencyAmount"
      transfer_details:
        type: object
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
    required:
      - is_pending

  ListTransactionsResponse:
    properties:
      accounts:
        type: array
        items:
          $ref: "#/definitions/Account"
      transactions:
        type: array
        items:
          $ref: "#/definitions/Transaction"
      login_identity:
        $ref: "#/definitions/LoginIdentityShort"
      institution:
        $ref: "#/definitions/InstitutionShort"
      total_transactions:
        type: integer
    required:
      - total_transactions

  ListInstitutionsResponse:
    type: array
    items:
      $ref: "#/definitions/Institution"

  #Identity Subtypes
  IdentityName:
    type: object
    properties:
      raw:
        type: string
        example: "John Maximus Doe"
      full_name:
        type: string
        example: "John Maximus Doe"
      first_name:
        type: string
        example: "John"
      last_name:
        type: string
        example: "Doe"
      other_name:
        type: string
        example: "Maximus"
      source:
        type: string
        example: "INTERNET_BANKING"
      source_ids:
        type: array
        items:
          type: string
      account_ids:
        type: array
        items:
          type: string
  IdentityAddress:
    type: object
    properties:
      raw:
        type: string
        example: "221B Baker Street, Westminster, London"
      full_address:
        type: string
        example: "221B Baker Street, Westminster, London"
      unit_number:
        type: string
        example: "221B"
      floor_number:
        type: string
        example: "2"
      building_name:
        type: string
        example: "Building A"
      street_number:
        type: string
        example: "221B"
      street_name:
        type: string
        example: "Baker Street"
      city:
        type: string
        example: "London"
      district:
        type: string
        example: "Marleybone"
      ward:
        type: string
        example: "Sheung Wan"
      street_address:
        type: string
        example: "221B Baker Street"
      province:
        type: string
        example: "Westminster"
      country:
        type: string
        example: "United Kingdom"
      postal_code:
        type: string
        example: "NW1 6XE"
      source:
        type: string
        example: "INTERNET_BANKING"
      source_ids:
        type: array
        items:
          type: string
      account_ids:
        type: array
        items:
          type: string
  IdentityEmail:
    type: object
    properties:
      raw:
        type: string
        example: "example123@example.com"
      email:
        type: string
        example: "example123@example.com"
      masked_email:
        type: string
        example: "exam******@example.com"
      source:
        type: string
        example: "INTERNET_BANKING"
      source_ids:
        type: array
        items:
          type: string
      account_ids:
        type: array
        items:
          type: string
  IdentityPhoneNumber:
    type: object
    properties:
      raw:
        type: string
        example: "+123 4567 8901"
      mobile_phone:
        type: string
        example: "+12345678901"
      other_phone:
        type: string
        example: "+12345678901"
      masked_phone:
        type: string
        example: "+12345****01"
      source:
        type: string
        example: "INTERNET_BANKING"
      source_ids:
        type: array
        items:
          type: string
      account_ids:
        type: array
        items:
          type: string
  IdentityDateOfBirth:
    type: object
    properties:
      raw:
        type: string
        example: "1999-01-22"
      date_of_birth:
        type: string
        example: "1999-01-22"
      masked_date_of_birth:
        type: string
        example: "XXXX-01-22"
      source:
        type: string
        example: "INTERNET_BANKING"
      source_ids:
        type: array
        items:
          type: string
      account_ids:
        type: array
        items:
          type: string

  InstitutionShort:
    properties:
      institution_id:
        type: string
        example: 123
      countries:
        type: array
        example: [HKG]
        items:
          type: string
      institution_name:
        type: string
        example: Mock Bank
      portal_name:
        type: string
        example: Personal Internet Banking

  Institution:
    properties:
      institution_id:
        type: string
        example: 123
      countries:
        type: array
        example: [HKG]
        items:
          type: string
      tags:
        type: array
        example: ["real"]
        items:
          type: string
          enum: [real, test]
      institution_type:
        type: string
        example: BANK
        enum: [BANK, WALLET]
      products_supported:
        type: array
        example:
          [
            ACCOUNTS,
            TRANSACTIONS,
            STATEMENTS,
            ACCOUNT_NUMBERS,
            IDENTITY,
          ]
        items:
          type: string
          enum: 
            [
              ACCOUNTS,
              TRANSACTIONS,
              STATEMENTS,
              ACCOUNT_NUMBERS,
              IDENTITY,
            ]
      parent_institution_name:
        type: string
        example: Parent Mock Bank
      institution_name:
        type: string
        example: Mock Bank
      portal_name:
        type: string
        example: Personal Internet Banking
      user_type:
        type: string
        example: PERSONAL
        enum: [PERSONAL, BUSINESS]
      status:
        type: string
        enum: [SUPPORTED, ALPHA, BETA]
        example: SUPPORTED
      status_details:
        type: object
        example: {}
      login_url:
        type: string
        example: "https://example.com/login"
      login_details:
        type: object
        example: {}
      login_methods:
        type: array
        items:
          type: object
          $ref: "#/definitions/LoginMethod"
      color:
        type: string
        example: "#FFFFFF"
      updated_at:
        type: string
        format: date-time
    required:
      - institution_id
      - countries
      - institution_type
      - products_supported
      - institution_name
      - user_type
      - status

  LoginMethod:
    properties:
      id:
        type: string
        example: "SMS OTP"
      name:
        type: string
        example: "SMS OTP"
      login_fields:
        type: array
        items:
          type: object
          $ref: "#/definitions/LoginField"

  LoginField:
    properties:
      key:
        type: string
        example: "password"
      name:
        type: string
        example: "Password"
      type:
        type: string
        example: "password"
        description: "could be password, text, number"

  CreateCustomerRequest:
    properties:
      name:
        type: string
        description: The email of the customer. This has to be unique.
        example: Acme Corporation
      email:
        type: string
        description: The email of the customer. This has to be unique.
      customer_app_id:
        type: string
        description: Primary key to identity the customer
      redirect_uris:
        type: array
        items:
          type: string
        description: The redirect callback
        example: ["https://example.com/callback"]
        minItems: 1
      webhook_uris:
        type: array
        items:
          type: string
        description: The webhook uris
        example: ["https://example.com/callback"]
        maxItems: 10
    required:
      - name
      - email
      - customer_app_id
      - redirect_uris

  CreateCustomerResponse:
    properties:
      name:
        type: string
        description: The email of the customer. This has to be unique.
        example: Acme Corporation
      email:
        type: string
        description: The email of the customer. This has to be unique.
      customer_app_id:
        type: string
        description: Primary key to identity the customer
      redirect_uris:
        type: array
        items:
          type: string
        description: The redirect callback
        example: ["https://example.com/callback"]
      client_id:
        type: string
        example: 6779ef20e75817b79602
      client_secret:
        type: string
        example: GBAyfVL7YWtP6gudLIjbRZV_N0dW4f3xETiIxqtokEAZ6FAsBtgyIq0MpU1uQ7J08xOTO2zwP0OuO3pMVAUTid
      webhook_uris:
        type: array
        items:
          type: string
        description: The webhook uris
        example: ["https://example.com/callback"]
    required:
      - name
      - email
      - customer_app_id
      - redirect_uris
      - client_id
      - client_secret

  TokenRequest:
    properties:
      client_id:
        type: string
        minLength: 26 # One ULID = 26 chars
        maxLength: 26
      client_secret:
        type: string
        minLength: 64 # One ULID = 26 chars
        maxLength: 80 # Prefix w/ unix timestamp upto the year ~2275
      grant_type:
        type: string
        description: support only client_credentials
    required:
      - client_id
      - client_secret
      - grant_type

  TokenResponse:
    properties:
      access_token:
        type: string
      token_type:
        type: string
      expires_in:
        type: number
        format: int64
        description: seconds
    required:
      - access_token
      - token_type
      - expires_in

  LinkTokenRequest:
    properties:
      grant_type:
        type: string
        description: support only client_credentials
      response_type:
        type: string
        example: code
      response_mode:
        type: string
        example: form_post
      user_id:
        type: string
        description: required when creating new Link, ignored when updating existing Link
        example: 01BX5ZZKBKACTAV9WEVGEMMVRY
        minLength: 4
      client_id:
        type: string
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        minLength: 4
      redirect_uri:
        type: string
        example: https://example.com/callback
        minLength: 4
      state:
        type: string
        example: user-state-passed
      scope:
        type: string
        example: comma,separated,scopes
      link_mode:
        type: string
        description: Space separated list of the tags of the institutions to view.
        example: real
      ui_mode:
        type: string
        enum: [iframe, redirect, auto_redirect, standalone]
        description: The UI mode link is intended to be used in - "iframe" (default), "auto_redirect" or "redirect" or "standalone"
        example: "redirect"
      language:
        type: string
        description: ISO639-1 language code. Language to display when user open the link, default to English (en) if not specified
        example: en
      code_challenge:
        type: string
        example: code-challenge
      code_challenge_method:
        type: string
        example: code-challenge-method
      login_identity_id:
        type: string
        description: use this to update a specific login identity
        example: uhdasidasodaso
      customization_id:
        type: string
        description: The customization id if the customer wishes to embed it into link token for spawning link with their choice of stuffs
        example: AULIDGOESHERE
      institution_id:
        type: string
        description: Institution to preselect
        example: hsbc-hk
      countries:
        type: array
        items:
          type: string
        description: institution's country filter
        example: ["HKG", "SGP"]
      user_type:
        type: array
        items:
          type: string
        description: institution's supported user_type filter
        example: ["PERSONAL"]
      products_supported:
        type: array
        items:
          type: string
        description: institution's supported product filter
        example: ["ACCOUNTS", "TRANSACTIONS"]
      products_requested:
        type: array
        items:
          type: string
        description: products that is requested
        example: ["ACCOUNTS", "TRANSACTIONS", "PAYMENTS"]
      payment_instruction_id:
        type: string
        description: The identifier returned after creating payment instruction
        example: payment_instruction_id
      automatic_data_refresh:
        type: string
        description: Controls the behavior of the automatic data refresh checkbox
        enum: ["ON", "OFF", "FORCED_ON"]
      institution_status:
        type: string
        description: institution's status filter
        example: "alpha beta supported"
    required:
      - grant_type
      - response_type
      - response_mode
      - redirect_uri
      - client_id

  LinkTokenResponse:
    properties:
      access_token:
        type: string
      token_type:
        type: string
      expires_in:
        type: number
        format: int64
        description: seconds
      link_url:
        type: string
        example: https://link.dev.finverse.net/onboarding?token=dasdsa8erhiu7rey78r
    required:
      - access_token
      - token_type
      - expires_in
      - link_url

  LinkRequest:
    properties:
      institution_id:
        type: string
        example: ez-bank
        minLength: 2
      store_credential:
        type: boolean
        example: true
      consent:
        type: boolean
        example: true
        description: this is a mandatory field
        x-nullable: true
      products_requested:
        type: array
        items:
          type: string
        description: products that is requested
        example: ["ACCOUNTS", "TRANSACTIONS", "PAYMENTS"]
      payment_instruction_id:
        type: string
        description: The identifier returned after creating payment instruction
        example: payment_instruction_id
    required:
      - institution_id
      - store_credential

  RelinkRequest:
    properties:
      store_credential:
        type: boolean
        example: true
      consent:
        type: boolean
        example: true
        description: this is a mandatory field
        x-nullable: true
    required:
      - store_credential

  GetLoginIdentityByIdResponse:
    properties:
      login_identity:
        $ref: "#/definitions/LoginIdentity"
      institution:
        $ref: "#/definitions/InstitutionShort"

  GetLoginIdentityHistoryResponse:
    properties:
      login_identity:
        $ref: "#/definitions/LoginIdentity"
      status_history:
        type: array
        items:
          $ref: "#/definitions/LoginIdentityStatusDetails"

  LoginIdentityStatusDetails:
    properties:
      event_date:
        type: string
        format: date-time
      event_name:
        type: string

  LoginIdentityLoginMethodsAvailable:
    type: object
    properties:
      havePassword:
        type: boolean
      haveSecret:
        type: boolean

  LoginIdentityBillingDetails:
    properties:
      billed_products:
        type: array
        items:
          type: string

  LoginIdentityShort:
    properties:
      login_identity_id:
        type: string
        format: ulid
      status:
        type: string
        example: LINKING
      last_session_id:
        type: string
        format: ulid

  LoginIdentity:
    properties:
      login_identity_id:
        type: string
        format: ulid
      customer_app_id:
        type: string
        format: ulid
      user_id:
        type: string
        example: form_post
      login_methods_available:
        $ref: "#/definitions/LoginIdentityLoginMethodsAvailable"
        example: {}
      permissions_grant_date:
        type: string
        format: date-time
      permissions_expiry_date:
        type: string
        format: date-time
      permissions:
        type: array
        items:
          type: string
      billing_details:
        $ref: "#/definitions/LoginIdentityBillingDetails"
        example: {}
      status:
        type: string
        example: LINKING
      status_details:
        $ref: "#/definitions/LoginIdentityStatusDetails"
        example: {}
      product_status:
        $ref: "#/definitions/AllProductStatus"
      authentication_status:
        $ref: "#/definitions/ProductStatus"
      error:
        $ref: "#/definitions/LoginIdentityError"
        example: {}
      last_success:
        type: string
        format: date-time
      first_success:
        type: string
        format: date-time
      webhook:
        type: string
        format: uri
        example: https://auth.example.com/callback
      session_status:
        type: string
        example: COMPLETED
      institution_id:
        type: string
        example: 123
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      linking_attempt_id:
        type: string
        example: 123
        description: a login attempt id which is unique per login_identity
      authentication_id:
        type: string
        example: 123
        description: a successful login attempt id which is unique per login_identity
      last_session_id:
        type: string
        format: ulid
      refresh:
        $ref: "#/definitions/RefreshData"
    required:
      - user_id
      - customer_app_id
      - institution_id

  RefreshData:
    type: object
    properties:
      credentials_stored:
        type: boolean
      refresh_allowed:
        type: boolean
    required:
      - credentials_stored
      - refresh_allowed

  LoginIdentityError:
    type: object
    properties:
      code:
        type: integer
      type:
        type: string
        example: "INVALID_CREDENTIALS"
      message:
        type: string
        example: "Credentials invalid"
      details:
        type: string
        example: "Credentials are invalid. Please try again."

  DeleteLoginIdentityResponse:
    type: object
    properties:
      success:
        type: boolean
        example: "true"

  LinkResponse:
    properties:
      auth_url:
        type: string
        example: https://auth.example.com/auth?client_id=clientIDstate=userState&redirect_url=callback

  AccessTokenResponse:
    properties:
      access_token:
        type: string
      login_identity_id:
        type: string
      token_type:
        type: string
      expires_in:
        type: number
        format: int64
        description: seconds
      refresh_token:
        type: string
    required:
      - access_token
      - login_identity_id
      - token_type
      - expires_in
      - refresh_token

  BadRequestModel:
    properties:
      error:
        type: object
        properties:
          code:
            type: number
            example: 40004
          name:
            type: string
            example: CREDENTIAL_NOT_STORED
          message:
            type: string
            example: Credential for this LoginIdentity is not stored. Please relink.
          link:
            type: string
            description: A link to visit for further action
            example: link.finverse.com

  GetStatementsResponse:
    properties:
      statements:
        type: array
        items:
          $ref: "#/definitions/Statement"
      login_identity:
        $ref: "#/definitions/LoginIdentityShort"
      institution:
        $ref: "#/definitions/InstitutionShort"

  GetStatementLinkResponse:
    properties:
      statement_links:
        type: array
        items:
          $ref: "#/definitions/StatementLink"

  Statement:
    properties:
      id:
        type: string
        example: "daiosdosi7823e43"
      date:
        type: string
        description: "YYYY-MM-DD"
        example: "2021-02-01"
      name:
        type: string
        example: "BusinessVantage"
      created_at:
        type: string
        format: date-time
        example: "2021-02-01T10:01:02.333Z"

  StatementLink:
    properties:
      url:
        type: string
        description: signedURL to download statement
        example: "https://www.finverse.net/statement.pdf"
      expiry:
        type: string
        format: date-time
        description: expiry of the signedURL
      statement_id:
        type: string
        example: "sadasd"

  AllProductStatus:
    properties:
      accounts:
        $ref: "#/definitions/ProductStatus"
      online_transactions:
        $ref: "#/definitions/ProductStatus"
      statements:
        $ref: "#/definitions/ProductStatus"
      historical_transactions:
        $ref: "#/definitions/ProductStatus"
      account_numbers:
        $ref: "#/definitions/ProductStatus"
      identity:
        $ref: "#/definitions/ProductStatus"
      balance_history:
        $ref: "#/definitions/ProductStatus"
      payments:
        $ref: "#/definitions/ProductStatus"
      income_estimation:
        $ref: "#/definitions/ProductStatus"

  ProductStatus:
    properties:
      status:
        type: string
        description: The current health of this product
        example: IN_PROGRESS, SUCCESS, PARTIAL_ERROR, WARNING, ERROR
      status_details:
        type: string
        description: The detailed event name
        example: AUTHENTICATION_INITIALIZED
      last_update:
        type: string
        format: date-time
        example: "2021-02-01T10:01:02.333Z"
        x-nullable: true
      last_successful_update:
        type: string
        format: date-time
        example: "2021-02-01T10:01:02.333Z"
        x-nullable: true

  PaymentDetails:
    properties:
      format:
        type: string
        example: SWIFT
      bic:
        type: string
        example: BKCHHKHHXXX
      bank_fullname:
        type: string
        example: Finverse test bank
      bank_shortname:
        type: string
        example: testbank
      bank_address:
        type: string
        example: 99 Stree, Building, City
      bank_country:
        type: string
        example: Country
      other_info:
        $ref: "#/definitions/OtherInfo"

  OtherInfo:
    properties:
      bank_code:
        type: string

  RedirectUriResponse:
    properties:
      redirect_uri:
        type: string

  CreatePaymentInstructionResponse:
    properties:
      payment_instruction_id:
        type: string

  GetPaymentInstructionsResponse:
    properties:
      payment_instruction:
        $ref: "#/definitions/PaymentInstruction"

  CustomerPaymentInstruction:
    properties:
      user_id:
        type: string
        description: A id of the user of this payment, need to equal to userId when creating link
        example: 01BX5ZZKBKACTAV9WEVGEMMVRY
      type:
        type: string
        description: Type of payment is being created, please check Documentation on which payment type is supported in each institution
        enum: ["DEBIT_AUTHORIZATION"]
      recipient_name:
        type: string
        description: The recipient name
        example: John Wick
      recipient_account_id:
        type: string
        description: The recipient account Id
        example: Something
      sender_name:
        type: string
        description: The sender name
        example: Jane Doe
      sender_account_id:
        type: string
        description: The sender account Id
        example: Something
      start_date:
        type: string
        description: When the payment should start
        example: 2022-01-23
        format: date
        x-nullable: true
      end_date:
        type: string
        description: When the payment should stop
        example: 2022-11-30
        format: date
        x-nullable: true
      currency:
        type: string
        description: The currency for the payment
        example: HKD
      amount:
        type: number
        description: The payment amount
        example: 123.45
      frequency:
        type: string
        description: How often the payment should be executed
        example: DAILY, WEEKLY OR MONTHLY
      remarks:
        type: string
        description: Related remarks about this instruction
        example: This is regular payment to pay for loan
    required:
      - user_id
      - type

  PaymentInstruction:
    properties:
      payment_instruction_id:
        type: string
        description: An id of the this payment
        example: 01BX5ZZKBKACTAV9WEVGEMMVRY
      user_id:
        type: string
        description: An id of the user of this payment, need to equal to userId when creating link
        example: 01BX5ZZKBKACTAV9WEVGEMMVRY
      login_identity_id:
        type: string
        description: An id that links this payment to a specific Login Identity
        example: 01BX5ZZKBKACTAV9WEVGEMMVRY
      type:
        type: string
        description: Type of payment that was created, please check Documentation on which payment type is supported in each institution
        enum: ["DEBIT_AUTHORIZATION"]
      recipient_name:
        type: string
        description: The recipient name
        example: John Wick
      recipient_account_id:
        type: string
        description: The recipient account Id
        example: Something
      sender_name:
        type: string
        description: The sender name
        example: Jane Doe
      sender_account:
        $ref: "#/definitions/PaymentAccount"
      sender_account_id:
        type: string
        description: The sender account Id
        example: The sender account ID
      start_date:
        type: string
        description: When the payment should start
        example: 2022-01-23
        format: date
        x-nullable: true
      end_date:
        type: string
        description: When the payment should stop
        example: 2022-11-30
        format: date
        x-nullable: true
      currency:
        type: string
        description: The currency for the payment
        example: HKD
      amount:
        type: number
        description: The payment amount
        example: 123.45
      frequency:
        type: string
        description: How often the payment should be executed
        example: DAILY, WEEKLY OR MONTHLY
      remarks:
        type: string
        description: Related remarks about this instruction
        example: This is regular payment to pay for loan
      status:
        type: string
        description: Status of the payment
        example: UNKNOWN, STARTED, SUBMITTED, FAILED, NOT_SUPPORTED OR TEMPORARILY_UNAVAILABLE_FOR_INSTITUTION
      reference_id:
        type: string
        description: Reference identification returned by institution
      last_update:
        type: string
        format: date-time
      info:
        type: object
        description: Extra information collected for this payment instruction

  IncomeEstimate:
    properties:
      amount:
        type: number
        description: Income amount
        example: 100
      currency:
        type: string
        description: Currency
        example: HKD
    required:
      - amount
      - currency

  MonthlyIncomeEstimate:
    properties:
      estimated_income:
        $ref: "#/definitions/IncomeEstimate"
      month:
        type: number
        format: int32
        description: The numeric month
        example: 1
      year:
        type: number
        format: int32
        description: The year
        example: 2020
    required:
      - estimated_income
      - month
      - year

  IncomeStream:
    properties:
      account_id:
        type: string
        description: Account this income estimate is associated with
        example: 01ARZ3NDEKTSV4RRFFQ69G5FAV
      estimated_monthly_income:
        $ref: "#/definitions/IncomeEstimate"
      transaction_count:
        type: number
        format: int64
        description: Number of transactions counted towards income
        example: 3
      monthly_history:
        type: array
        items:
          $ref: "#/definitions/MonthlyIncomeEstimate"
    required:
      - account_id
      - transaction_count
      - monthly_history

  IncomeTotal:
    properties:
      estimated_monthly_income:
        $ref: "#/definitions/IncomeEstimate"
      transaction_count:
        type: number
        format: int64
        description: Number of transactions counted towards income
        example: 3
      monthly_history:
        type: array
        items:
          $ref: "#/definitions/MonthlyIncomeEstimate"
    required:
      - transaction_count
      - monthly_history

  SingleSourceIncome:
    properties:
      income_streams:
        type: array
        items:
          $ref: "#/definitions/IncomeStream"
      income_total:
        $ref: "#/definitions/IncomeTotal"
      source:
        type: string
        description: Where the income estimate was sourced from
        example: DEPOSITS_ANALYSIS
      source_id:
        type: string
        description: Unknown
    required:
      - income_total
      - income_streams
      - source
      - source_id

  IncomeResponse:
    properties:
      income:
        type: array
        items:
          $ref: "#/definitions/SingleSourceIncome"
      login_identity:
        $ref: "#/definitions/LoginIdentityShort"
      institution:
        $ref: "#/definitions/InstitutionShort"
    required:
      - income
      - login_identity
      - institution

  PaymentAccount:
    properties:
      raw:
        type: string
        description: The raw value for the account the user selected when making payment request

  CompositeStatementLink:
    properties:
      url:
        type: string
        description: signedURL to download statement
        example: "https://www.finverse.net/statement.pdf"
      expiry:
        type: string
        format: date-time
        description: expiry of the signedURL
    required:
      - url
      - expiry

  CreateMandateRequest:
    properties:
      recipient:
        $ref: "#/definitions/MandateRecipient"
        description: Information about the accountholder receiving the payment. See below.
      sender:
        $ref: "#/definitions/CreateMandateSender"
        description: Information about the accountholder sending the payment. See below.
      mandate_details:
        $ref: "#/definitions/MandateDetails"
        description: Additional details on the mandate. See below.
    required:
      - recipient
      - sender
      - mandate_details

  CreateMandateResponse:
    properties:
      mandate_id:
        type: string
        description: Finverse Mandate ID

  GetMandateResponse:
    properties:
      last_update:
        type: string
        format: date-time
        description: Timestamp in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
      mandate_id:
        type: string
        description: Finverse Mandate ID (ULID)
      mandate_status:
        type: string
        description: Mandate status
        enum: ["CREATED", "PROCESSING", "SUBMITTED", "ERROR"]
      recipient:
        $ref: "#/definitions/MandateRecipient"
      sender:
        $ref: "#/definitions/GetMandateSender"
      mandate_details:
        $ref: "#/definitions/MandateDetails"
    required:
      - last_update
      - mandate_id
      - mandate_status
      - recipient
      - sender
      - mandate_details

  MandateRecipient:
    properties:
      recipient_account_id:
        type: string
        description: Merchant account ID assigned by Finverse
    required:
      - recipient_account_id

  CreateMandateSender:
    properties:
      name:
        type: string
      user_id:
        type: string
        description: Customer App's user ID, representing the end-user making the payment.
      sender_reference_id:
        type: string
        description: Customer App's reference ID, representing the sender's account or billing reference number.
    required:
      - user_id

  GetMandateSender:
    properties:
      name:
        type: string
      user_id:
        type: string
        description: Customer App's user ID, representing the end-user making the payment.
      sender_reference_id:
        type: string
        description: Customer App's reference ID, representing the sender's account or billing reference number.
      sender_account:
        $ref: "#/definitions/PaymentAccount"
        description: Details on the sender's bank account linked with the Mandate (during Mandate authorization)
    required:
      - user_id
      - sender_account

  MandateDetails:
    properties:
      currency:
        type: string
        description: ISO currency code
      start_date:
        type: string
        format: date
        description: YYYY-MM-DD, must be later than or the same as the date of creation. If unspecified, default to the date of creation.
      end_date:
        type: string
        format: date
        description: YYYY-MM-DD, must be later than the date of creation.
      payment_schedule:
        $ref: "#/definitions/PaymentSchedule"
        description: Pre-scheduled payment details (only communicated to banks which require a specific payment schedule and amount when setting up a mandate).
      transaction_limits:
        $ref: "#/definitions/TransactionLimits"
        description: Pre-set limits on the frequency and amounts of payments under this mandate.
      description:
        type: string
        description: End-user facing description of the mandate (used in notifications, and in payments if no description is provided)
    required:
      - currency

  PaymentSchedule:
    properties:
      amount:
        type: integer
        example: 100
        description: Amount to be paid, in currency’s smallest unit or “minor unit”, as defined in ISO 4217. For example, HKD 100.01 is represented as amount = 10001 (minor unit = cents). For currencies without minor units (e.g. VND, JPY), the amount is represented as is, without modification. For example, VND 15101 is represented as amount = 15101.
      frequency:
        type: string
        description: Frequency of the payment. Possible values (DAILY, WEEKLY, MONTHLY, QUARTERLY, YEARLY)
        enum: ["DAILY", "WEEKLY", "MONTHLY", "QUARTERLY", "YEARLY"]
    required:
      - amount
      - frequency

  TransactionLimits:
    properties:
      max_period_amount:
        type: integer
        description: Maximum amount of money that can be paid during the reference period (across any number of transactions). Expressed in currency’s smallest unit or “minor unit”, as defined in ISO 4217.
      max_period_count:
        type: integer
        description: Maximum number of transactions (of any amount) that can be executed during the reference period.
      max_transaction_amount:
        type: integer
        description: The maximum amount of money that can be transferred in a single transaction under this mandate. Expressed in currency’s smallest unit or “minor unit”, as defined in ISO 4217.
      period:
        type: string
        description: Reference calendar periods for the payment limits. Possible values (DAILY, WEEKLY, MONTHLY, QUARTERLY, YEARLY)
        enum: ["DAILY", "WEEKLY", "MONTHLY", "QUARTERLY", "YEARLY"]
    required:
      - period

  CreatePaymentRequest:
    properties:
      amount:
        type: integer
        example: 100
        description: Amount to be paid, in currency’s smallest unit or “minor unit”, as defined in ISO 4217. For example, HKD 100.01 is represented as amount = 10001 (minor unit = cents). For currencies without minor units (e.g. VND, JPY), the amount is represented as is, without modification. For example, VND 15101 is represented as amount = 15101.
      type:
        type: string
        description: Indicates whether this is a mandate-based payment or one-off direct payment to an account. Possible values - MANDATE, SINGLE
        enum: ["MANDATE", "SINGLE"]
      payment_details:
        description: Additional details required for each payment type.
        $ref: "#/definitions/PaymentDetails2"
    required:
      - payment_details
      - amount
      - type

  GetPaymentResponse:
    properties:
      payment_id:
        type: string
        description: Finverse Payment ID
      amount:
        type: integer
        example: 100
        description: Amount to be paid, in currency’s smallest unit or “minor unit”, as defined in ISO 4217. For example, HKD 100.01 is represented as amount = 10001 (minor unit = cents). For currencies without minor units (e.g. VND, JPY), the amount is represented as is, without modification. For example, VND 15101 is represented as amount = 15101.
      type:
        type: string
        description: Indicates whether this is a mandate-based payment or one-off direct payment to an account. Possible values - MANDATE, SINGLE
        enum: ["MANDATE", "SINGLE"]
      last_update:
        type: string
        format: date-time
        description: Timestamp in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
      status:
        type: string
        description: Possible values - CREATED, AUTHORIZED, SUBMITTED, EXECUTED, FAILED, REJECTED, CANCELLED.
        enum:
          [
            "CREATED",
            "AUTHORIZED",
            "SUBMITTED",
            "EXECUTED",
            "FAILED",
            "REJECTED",
            "CANCELLED",
          ]
      payment_details:
        description: Additional details required for each payment type.
        $ref: "#/definitions/PaymentDetails2"

  PaymentDetails2:
    properties:
      description:
        type: string
        description: The transaction description provided to banks, which banks will show to their customers.
      mandate_id:
        type: string
        description: ID of the mandate this pament is referring to.
      transaction_reference_id:
        type: string
        description: Customer's ID for this transaction
    required:
      - mandate_id

  CreatePaymentResponse:
    properties:
      payment_id:
        type: string
        description: Finverse Payment ID

  GetJWKSResponse:
    properties:
      keys:
        type: array
        items:
          $ref: "#/definitions/JWKSKey"

  JWKSKey:
    properties:
      kty:
        type: string
        description: The "kty" (key type) parameter identifies the cryptographic algorithm family used with the key, such as "RSA" or "EC".
      kid:
        type: string
        description: The "kid" (key ID) parameter is used to match a specific key
      use:
        type: string
        description: The "use" (public key use) parameter identifies the intended use of the public key
      e:
        type: string
        description: RSA key value "e"
      "n":
        type: string
        description: RSA key value "n"
      x5c:
        description: The "x5c" (X.509 certificate chain) parameter contains a chain of one or more PKIX certificates
        type: array
        items:
          type: string

  GetMandateAuthLinkResponse:
    properties:
      access_token:
        type: string
        description: Short-lived access-token to interact with Finverse Link
      expires_in:
        type: integer
        description: Access token validity duration (in seconds)
      link_url:
        type: string
        description: URL to launch Finverse Link to authorize the mandate
      token_type:
        type: string
        enum: ["Bearer"]
    required:
      - access_token
      - expires_in
      - link_url
      - token_type

  GetMandateAuthLinkRequest:
    properties:
      mandate_id:
        type: string
        description: Mandate ID
      link_customizations:
        $ref: "#/definitions/MandateAuthLinkCustomizations"
    required:
      - mandate_id
      - link_customizations

  MandateAuthLinkCustomizations:
    properties:
      countries:
        type: array
        items:
          type: string
        description: institution's country filter
        example: ["HKG", "SGP"]
      institution_id:
        type: string
        description: Institution to preselect
        example: hsbc-hk
      institution_status:
        type: string
        description: institution's status filter
        example: "alpha beta supported"
      language:
        type: string
        description: ISO639-1 language code. Language to display when user open the link, default to English (en) if not specified
        example: en
      link_mode:
        type: string
        description: Space separated list of the tags of the institutions to view.
        example: real
      products_supported:
        type: array
        items:
          type: string
        description: institution's supported product filter. For mandate authorization, this field should contain ["MANDATE"]
        example: ["ACCOUNTS", "TRANSACTIONS", "MANDATE"]
      ui_mode:
        type: string
        enum: [iframe, redirect, auto_redirect, standalone]
        description: The UI mode link is intended to be used in - "iframe" (default), "auto_redirect" or "redirect" or "standalone"
        example: "redirect"
      user_type:
        type: array
        items:
          type: string
        description: institution's supported user_type filter
        example: ["PERSONAL"]

  GetMandateAuthResponse:
    properties:
      mandate_id:
        type: string
        description: Finverse Mandate ID
      mandate_status:
        type: string
        description: Mandate status
        enum: ["CREATED", "PROCESSING", "SUBMITTED", "ERROR"]
      recipient_account_id:
        type: string
        description: Merchant account ID assigned by Finverse
      institution_id:
        type: string
        description: Finverse Institution ID. Only returned if institution_id was included in the request.
      sender_type:
        type: string
        description: Type of account held by the Sender at the Institution. Possible values are INDIVIDUAL, BUSINESS
        enum: ["INDIVIDUAL", "BUSINESS"]
      auth_checklist:
        description: Checklist of the authorization factors needed to complete Mandate authorization
        type: array
        items:
          $ref: "#/definitions/AuthChecklistFactor"
      encryption_info:
        description: Encryption_info used in the POST. The object contains the key_id and the URL where the key is hosted.
        $ref: "#/definitions/MandateAuthEncryptionInfo"
      last_update:
        type: string
        format: date-time
        description: Timestamp in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
    required:
      - mandate_id
      - mandate_status
      - recipient_account_id
      - institution_id
      - sender_type
      - auth_checklist
      - encryption_info
      - last_update

  MandateAuthEncryptionInfo:
    properties:
      jwks_url:
        type: string
      key_id:
        type: string
    required:
      - jwks_url
      - key_id

  AuthChecklistFactor:
    properties:
      type:
        type: string
        description: Type of authorization factor
        enum:
          [
            "ACCOUNT_IDENTIFICATION",
            "USER_IDENTIFICATION",
            "ENDUSER_CONSENT",
            "ACCOUNTHOLDER_AUTHENTICATION",
          ]
      group_id:
        type: string
        description: Allows grouping similar checklist item types together
      required:
        type: string
        description: Indicates whether authorization factor is known to be required at this time.  Possible values are YES, NO, OPTIONAL
        enum: ["YES", "NO", "OPTIONAL"]
      options:
        description: Array of the options accepted for a specific authorization factor
        type: array
        items:
          $ref: "#/definitions/AuthChecklistOptions"
    required:
      - type
      - group_id
      - required
      - options

  AuthChecklistOptions:
    properties:
      name:
        type: string
        description: Name of authorization factor. Possible values are INSTITUTION_CREDENTIALS_LOGIN, INSTITUTION_OAUTH_LOGIN,
        enum: ["INSTITUTION_CREDENTIALS_LOGIN", "INSTITUTION_OAUTH_LOGIN"]
      submitted_at:
        type: string
        format: date-time
        description: Timestamp in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ) for when the authorization factor was submitted to Finverse
        x-nullable: true
      submitted_by:
        type: string
        description: Indicates who submitted the authorization factor to Finverse. Possible values are CUSTOMER_APP, FINVERSE_LINK
        enum: ["CUSTOMER_APP", "FINVERSE_LINK"]
    required:
      - name

  SubmitAuthChecklistResponse:
    properties:
      mandate_id:
        type: string
        description: Finverse Mandate ID
      auth_checklist:
        description: Checklist of the authorization factors needed to complete Mandate authorization
        type: array
        items:
          $ref: "#/definitions/AuthChecklistFactor"
      mandate_status:
        type: string
        description: Mandate status
        enum: ["CREATED", "PROCESSING", "SUBMITTED", "ERROR"]
      last_update:
        type: string
        format: date-time
        description: Timestamp in ISO format (YYYY-MM-DDTHH:MM:SS.SSSZ)
    required:
      - mandate_id
      - auth_checklist
      - mandate_status
      - last_update

  SubmitAuthChecklistRequest:
    properties:
      key_id:
        type: string
        description: The key_id that was used to encrypt the envelope key
      institution_id:
        type: string
        description: Finverse Institution ID
      sender_type:
        type: string
        description: Type of account held by the Sender at the Institution. Possible values are INDIVIDUAL, BUSINESS
        enum: ["INDIVIDUAL", "BUSINESS"]
      envelope_encryption_key:
        type: string
        description: The encrypted envelope key
      initialization_vector:
        type: string
        description: The initialization vector used for enncrypting the payload
      message_authentication_code:
        type: string
        description: The authentication code is used to authenticate the origin of the message
      ciphertext:
        type: string
        description: The encrypted payload that contains auth checklist items
    required:
      - key_id
      - institution_id
      - envelope_encryption_key
      - initialization_vector
      - message_authentication_code
      - ciphertext
